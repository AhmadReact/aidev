import React, { memo, useEffect, useState } from "react";
import { generateResponse } from "../../service/service";
import img from "../../assets/images/pulse.gif";
import { collection, addDoc, getDocs, set ,updateDoc, doc } from "firebase/firestore";
import { db } from "../../config/firebase";

const CustomTextfield = ({ setChatArray , chatArray,prevChat,uniqueid,setuniqueid }) => {
  const [loader, setloader] = useState(false);
  const [input, setInput] = useState("");
  const [onetime, setonetime] = useState(true);



 

  const submit = () => {
   

    
    setloader(true);
    setInput("");
    setChatArray((prev) => {
      return [
        ...prev,
        {
          question: input,
          answer: "",
        },
      ];
    });

    generateResponse(input).then((res) => {

      if(onetime && !uniqueid)
      {
        addTodo(input,res.text);
        setonetime(false);
      }
      else{

        editTodo(input,res.text);
      }
      
      setloader(false);
      setChatArray((prev) => {
        return prev.map((obj, i) => {
          if (i === prev.length - 1) {
            obj.answer = res.text;
            return obj;
          } else {
            return obj;
          }
        });
      });
    });
  };

  const addTodo = async (question,answer) => {

    try {
      const docRef = await addDoc(collection(db, "todos"), {
        [question] : answer,
      
      });

      setuniqueid(docRef.id);

      console.log("Document written with ID: ", docRef.id);
      // fetchPost();
    } catch (e) {
      console.error("Error adding document: ", e);
    }
  };


  const editTodo = async (question,answer) => {

    await updateDoc(doc(db, "todos", uniqueid), {[question]:answer});
  

  };


  return (
    <div className="bg-[#6B44E2]   rounded-xl mt-4 shadow-2xl">
      <div className="bg-white h-[45px] w-full border-[1px] border-solid  border-[#6B44E2]  rounded-lg flex items-center gap-x-2  shadow-[0_35px_60px_-15px_rgba(0,0,0,0.3)]">
        <input
          type="text"
          value={input}
          onChange={(e) => setInput(e.target.value)}
          className="pl-[15px] h-[43px] w-[94%]  rounded-lg focus:outline-none"
          placeholder="Type new questions"
        />
        {/* <span class="material-symbols-outlined text-[#525354] cursor-pointerd cursor-pointer">
mic
</span> */}
        {loader ? (
          <img src={img} className="h-[56px] mr-2" />
        ) : (
          <button onClick={submit}>
            <span class="material-symbols-outlined text-[#525354] cursor-pointer">
              near_me
            </span>
          </button>
        )}
      </div>
      <p className="text-white py-1 text-[12px] text-center">
        All the results are generated by AI, If you get any wrong answers report
        here
      </p>
    </div>
  );
};

export default memo(CustomTextfield)
